from ttk import Frame, Style
from Tkinter import RAISED

from itertools import product

from point import Point

class PolyominoWidget(Frame):

    def __init__(self, parent, polyomino, cell_size=50, color='Blue'):
        Frame.__init__(self, parent)

        style = Style()
        style.configure('PolyominoBlock.TFrame', background=color, relief=RAISED)
           
        polyomino = polyomino.move_to_origin()

        for (x, y) in product(xrange(polyomino.width()), xrange(polyomino.height())):
            block = None

            if Point(x, y) in polyomino.points:
                block = Frame(parent, style='PolyominoBlock.TFrame', width=cell_size, height=cell_size)
            else:
                block = Frame(parent, width=cell_size, height=cell_size)

            block.grid(column=x, row=y)

def main():
    from Tkinter import Tk
    from polyomino import Polyomino

    p = Polyomino((0, 0), (1, 0), (2, 0), (2, 1))

    tk = Tk()
    pw = PolyominoWidget(tk, p)
    tk.mainloop()
    
if __name__ == '__main__':
    main()  
